{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAG5C,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAGjD,oEAAoE;AACpE,2FAA2F;AAC3F,MAAM,OAAO,UAAW,SAAQ,SAAS;IAGvC,KAAK,CAAC,OAAO,CAAC,OAAuC;QACnD,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;QACzC,MAAM,iBAAiB,GAAG,GAAG,EAAE;YAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAErC,OAAO,CAAC,GAAG,CAAC;gBACV,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC;gBACjC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC;gBAC9B,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC;aACpC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;gBACb,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QACF,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAA;IACvD,CAAC;IACD,KAAK,CAAC,UAAU;QACd,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IACD,KAAK,CAAC,QAAQ,CAAC,QAA4B,IAAmB,CAAC;CAChE","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { LiveKitPlugin } from './definitions';\nimport { Room, RoomEvent } from 'livekit-client';\n\n\n// Probably want to use the react-components instead of this for web\n// since web requires having certain UI components on the page for audio/microphone to work\nexport class LiveKitWeb extends WebPlugin implements LiveKitPlugin {\n  _room: Room | undefined;\n\n  async connect(options: { url: string, token: string }): Promise<void> {\n    const room = new Room();\n    this._room = room;\n    room.connect(options.url, options.token);\n    const onSignalConnected = () => {\n      const localP = room.localParticipant;\n\n      Promise.all([\n        localP.setMicrophoneEnabled(true),\n        localP.setCameraEnabled(false),\n        localP.setScreenShareEnabled(false),\n      ]).catch((e) => {\n        console.error(e);\n      });\n    };\n    room.on(RoomEvent.SignalConnected, onSignalConnected)\n  }\n  async disconnect(): Promise<void> {\n    if (this._room) {\n      this._room.disconnect();\n    }\n  }\n  async setMuted(_options: { muted: boolean }): Promise<void> { }\n}\n"]}